openapi: 3.0.3
info:
  title: Karma API
  version: 0.1.0
  description: |
    Karma is an infrastructure management system that records and analyzes infrastructure state changes as a graph of events and dependencies.

servers:
  - url: https://api.usekarma.dev/v1

paths:
  /events:
    post:
      summary: Log an event
      operationId: logEvent
      x-lambda-nickname: karma-log-handler
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: Event successfully logged
        '400':
          description: Invalid request

  /graph/query:
    post:
      summary: Query the infrastructure graph
      operationId: queryGraph
      x-lambda-nickname: karma-graph-query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphQuery'
      responses:
        '200':
          description: Query results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphQueryResult'
        '400':
          description: Invalid query

components:
  schemas:
    Event:
      type: object
      required:
        - type
        - timestamp
      properties:
        type:
          type: string
          description: Type of the event (e.g., config_change, deploy_action)
        timestamp:
          type: string
          format: date-time
          description: Time the event occurred
        metadata:
          type: object
          additionalProperties: true
          description: Additional event-specific metadata

    GraphQuery:
      type: object
      required:
        - query_type
      properties:
        query_type:
          type: string
          description: Type of graph query (e.g., "recent_changes", "dependencies")
        parameters:
          type: object
          additionalProperties: true
          description: Query-specific parameters

    GraphQueryResult:
      type: object
      properties:
        nodes:
          type: array
          items:
            type: object
        edges:
          type: array
          items:
            type: object
